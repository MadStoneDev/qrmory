{
  "version": 3,
  "sources": ["../../node_modules/d3-svg-to-png/index.js"],
  "sourcesContent": ["function inlineStyles (source, target) {\n  // inline style from source element to the target (detached) one\n  const computed = window.getComputedStyle(source);\n  for (const styleKey of computed) {\n    target.style[styleKey] = computed[styleKey]\n  }\n\n  // recursively call inlineStyles for the element children\n  for (let i = 0; i < source.children.length; i++) {\n    inlineStyles(source.children[i], target.children[i])\n  }\n}\n\nfunction copyToCanvas ({ source, target, scale, format, quality }) {\n  let svgData = new XMLSerializer().serializeToString(target);\n  let canvas = document.createElement('canvas');\n  let svgSize = source.getBoundingClientRect();\n\n  //Resize can break shadows\n  canvas.width = svgSize.width * scale;\n  canvas.height = svgSize.height * scale;\n  canvas.style.width = svgSize.width;\n  canvas.style.height = svgSize.height;\n\n  let ctxt = canvas.getContext('2d');\n  ctxt.scale(scale, scale);\n\n  let img = document.createElement('img');\n\n  img.setAttribute(\n    'src',\n    'data:image/svg+xml;base64,' + btoa(unescape(encodeURIComponent(svgData)))\n  );\n  return new Promise(resolve => {\n    img.onload = () => {\n      ctxt.drawImage(img, 0, 0);\n      resolve(canvas.toDataURL(`image/${format === 'jpg' ? 'jpeg' : format}`,  quality));\n    };\n  });\n}\n\nfunction downloadImage ({ file, name, format }) {\n  let a = document.createElement('a');\n  a.download = `${name}.${format}`;\n  a.href = file;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n}\n\nmodule.exports = async function (\n  source,\n  name,\n  {\n    scale = 1,\n    format = 'png',\n    quality = 0.92,\n    download = true,\n    ignore = null,\n    cssinline = 1,\n    background = null\n  } = {}\n) {\n  // Accept a selector or directly a DOM Element\n  source = (source instanceof Element) ? source : document.querySelector(source);\n\n  // Create a new SVG element similar to the source one to avoid modifying the\n  // source element.\n  const target = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n  target.innerHTML = source.innerHTML;\n  for (const attr of source.attributes) {\n    target.setAttribute(attr.name, attr.value);\n  }\n\n  // Set all the css styles inline on the target element based on the styles\n  // of the source element\n  if (cssinline === 1) {\n    inlineStyles(source, target);\n  }\n\n  if (background) {\n    target.style.background = background\n  }\n\n  //Remove unwanted elements\n  if (ignore != null) {\n    const elt = target.querySelector(ignore);\n    elt.parentNode.removeChild(elt);\n  }\n\n  //Copy all html to a new canvas\n  const file = await copyToCanvas({\n    source,\n    target,\n    scale,\n    format,\n    quality\n  });\n\n  if (download) {\n    downloadImage({ file, name, format });\n  }\n  return file;\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,aAAS,aAAc,QAAQ,QAAQ;AAErC,YAAM,WAAW,OAAO,iBAAiB,MAAM;AAC/C,iBAAW,YAAY,UAAU;AAC/B,eAAO,MAAM,YAAY,SAAS;AAAA,MACpC;AAGA,eAAS,IAAI,GAAG,IAAI,OAAO,SAAS,QAAQ,KAAK;AAC/C,qBAAa,OAAO,SAAS,IAAI,OAAO,SAAS,EAAE;AAAA,MACrD;AAAA,IACF;AAEA,aAAS,aAAc,EAAE,QAAQ,QAAQ,OAAO,QAAQ,QAAQ,GAAG;AACjE,UAAI,UAAU,IAAI,cAAc,EAAE,kBAAkB,MAAM;AAC1D,UAAI,SAAS,SAAS,cAAc,QAAQ;AAC5C,UAAI,UAAU,OAAO,sBAAsB;AAG3C,aAAO,QAAQ,QAAQ,QAAQ;AAC/B,aAAO,SAAS,QAAQ,SAAS;AACjC,aAAO,MAAM,QAAQ,QAAQ;AAC7B,aAAO,MAAM,SAAS,QAAQ;AAE9B,UAAI,OAAO,OAAO,WAAW,IAAI;AACjC,WAAK,MAAM,OAAO,KAAK;AAEvB,UAAI,MAAM,SAAS,cAAc,KAAK;AAEtC,UAAI;AAAA,QACF;AAAA,QACA,+BAA+B,KAAK,SAAS,mBAAmB,OAAO,CAAC,CAAC;AAAA,MAC3E;AACA,aAAO,IAAI,QAAQ,aAAW;AAC5B,YAAI,SAAS,MAAM;AACjB,eAAK,UAAU,KAAK,GAAG,CAAC;AACxB,kBAAQ,OAAO,UAAU,SAAS,WAAW,QAAQ,SAAS,UAAW,OAAO,CAAC;AAAA,QACnF;AAAA,MACF,CAAC;AAAA,IACH;AAEA,aAAS,cAAe,EAAE,MAAM,MAAM,OAAO,GAAG;AAC9C,UAAI,IAAI,SAAS,cAAc,GAAG;AAClC,QAAE,WAAW,GAAG,QAAQ;AACxB,QAAE,OAAO;AACT,eAAS,KAAK,YAAY,CAAC;AAC3B,QAAE,MAAM;AACR,eAAS,KAAK,YAAY,CAAC;AAAA,IAC7B;AAEA,WAAO,UAAU,eACf,QACA,MACA;AAAA,MACE,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,UAAU;AAAA,MACV,WAAW;AAAA,MACX,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,aAAa;AAAA,IACf,IAAI,CAAC,GACL;AAEA,eAAU,kBAAkB,UAAW,SAAS,SAAS,cAAc,MAAM;AAI7E,YAAM,SAAS,SAAS,gBAAgB,8BAA8B,KAAK;AAC3E,aAAO,YAAY,OAAO;AAC1B,iBAAW,QAAQ,OAAO,YAAY;AACpC,eAAO,aAAa,KAAK,MAAM,KAAK,KAAK;AAAA,MAC3C;AAIA,UAAI,cAAc,GAAG;AACnB,qBAAa,QAAQ,MAAM;AAAA,MAC7B;AAEA,UAAI,YAAY;AACd,eAAO,MAAM,aAAa;AAAA,MAC5B;AAGA,UAAI,UAAU,MAAM;AAClB,cAAM,MAAM,OAAO,cAAc,MAAM;AACvC,YAAI,WAAW,YAAY,GAAG;AAAA,MAChC;AAGA,YAAM,OAAO,MAAM,aAAa;AAAA,QAC9B;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAED,UAAI,UAAU;AACZ,sBAAc,EAAE,MAAM,MAAM,OAAO,CAAC;AAAA,MACtC;AACA,aAAO;AAAA,IACT;AAAA;AAAA;",
  "names": []
}
